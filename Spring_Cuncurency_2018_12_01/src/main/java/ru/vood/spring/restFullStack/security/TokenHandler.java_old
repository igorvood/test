package ru.vood.spring.restFullStack.security;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jws;
import io.jsonwebtoken.Jwts;
import org.springframework.stereotype.Component;

import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;
import java.util.Optional;

@Component
public class TokenHandler {


    private final SecretKey secretKey;

    public TokenHandler() {
        String jwtKey = "jwtKey";
        byte[] decodeKey = Base64.getDecoder().decode(jwtKey);
        this.secretKey = new SecretKeySpec(decodeKey, 0, decodeKey.length, "AES");
    }

    public Optional<Long> exctractUserId(String token) {
        try {
            Jws<Claims> claimsJws = Jwts.parser().setSigningKey(secretKey).parseClaimsJws(token);
            final Claims body = claimsJws.getBody();
            return Optional
                    .ofNullable(body.getId())
                    .map(Long::new);
        } catch (RuntimeException e) {
            return Optional.empty();
        }

    }
}
